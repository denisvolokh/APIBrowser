<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  verticalAlign="middle"
		  height="30"
		  gap="0">
	
	<fx:Script>
		<![CDATA[
			import com.elanceapibrowser.model.Method;
			import com.elanceapibrowser.model.MethodParam;
			
			import spark.components.Label;
			
			private var labelQueryLabel : spark.components.Label;
			
			private var _queryString : String;
			
			public function set queryString(value : String):void
			{
				_queryString = value;
				
				labelQueryLabel.text = _queryString;
			}
			
			private var _method : Method;
	
			public function set method(value:Method):void
			{
				_method = value;
				
				renderQuery();
			}
			
			public function clear():void
			{
				this.removeAllElements();
			}
			
			private function renderQuery():void
			{
				clear()
				
				if (_method.requestParams.length > 0)
				{
					var splitted : Array = _method.fullPath.split("}");
					for each (var str : String in splitted)
					{
						var partion : Label = new Label();
						partion.setStyle("fontSize", 16);
						partion.setStyle("paddingLeft", 0);
						partion.setStyle("paddingRight", 0);
						
						var render : RequestItemRenderer = new RequestItemRenderer;
						if (str.indexOf("{") >= 0)
						{
							var s :	Array = str.split("{");
							
							partion.text = s[0];
							addElement(partion);
							
							render.paramName = s[1];
							var p : MethodParam = _method.findRequestParamByName(s[1])
							if (p && p.value != null)
							{
								render.paramValue = p.value;
							}
							addElement(render);		
						}
						else
						{
							if (str != "")
							{
								partion.text = str;
								addElement(partion);	
							}
						}
					}
				}
				else
				{
					var lbl : Label = new Label;
					lbl.text = _method.fullPath;
					lbl.setStyle("fontSize", 16);
					addElement(lbl);
				}
				
				labelQueryLabel = new Label;
				labelQueryLabel.percentWidth = 100;
				labelQueryLabel.setStyle("fontSize", 16);
				addElement(this.labelQueryLabel);
			}
			
			public function getReguestParamsString():String
			{
				var url : String = ""
				for (var i : int = 0; i < this.numElements - 1; i++)
				{
					var el : * = this.getElementAt(i)
					if (el is RequestItemRenderer)
					{
						url += (el as RequestItemRenderer).paramValue;
					}
					
					if (el is spark.components.Label)
					{
						url += (el as spark.components.Label).text;
					}
				}
				
				return url;
			}
			
			public function getRequestParams():Array
			{
				var params : Array = [];
				for (var i : int = 0; i < this.numElements - 1; i++)
				{
					var el : * = this.getElementAt(i)
					if (el is RequestItemRenderer)
					{
						var param : MethodParam = new MethodParam();
						param.name = (el as RequestItemRenderer).paramName;
						param.value = (el as RequestItemRenderer).paramValue;
						params.push(param);
					}
				}
				
				return params;
			}
			
		]]>
	</fx:Script>
	
</s:HGroup>
